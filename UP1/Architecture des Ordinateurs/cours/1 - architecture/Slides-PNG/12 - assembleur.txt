Wikipedia : strtolower 68000

00100000             
00100000  CE56 0000  
00100004  206E 0008  
00100008  226E 000C  
0010000C  1018       
0010000E  0C00 0041  
00100012  650A       
00100014  0C00 005A  
00100018  6204       
0010001A  0600 0020  
0010001E  12E0       
00100020  66E8       
00100022  4E5E       
00100024  4E75       
00100026

	

; strtolower:
; Copy a null-terminated ASCII string, converting
; all alphabetic characters to lower case.
;
; Entry parameters:
;   (SP+0): Source string address
;   (SP+4): Target string address

                org     $00100000       ;Start at 00100000
strtolower      public
                link    a6,#0           ;Set up stack frame
                movea   8(a6),a0        ;A0 = src, from stack
                movea   12(a6),a1       ;A1 = dst, from stack
loop            move.b  (a0)+,d0        ;Load D0 from (src)
                cmpi    #'A',d0         ;If D0 < 'A',
                blo     copy            ;skip
                cmpi    #'Z',d0         ;If D0 > 'Z',
                bhi     copy            ;skip
                addi    #'a'-'A',d0     ;D0 = lowercase(D0)
copy            move.b  d0,(a1)+        ;Store D0 to (dst)
                bne     loop            ;Repeat while D0 <> NUL
                unlk    a6              ;Restore stack frame
                rts                     ;Return
                end








Mon Texte :
L'assembleur est la traduction en langage "humain" des instructions que la machine va exécuter.
Chaque ligne est constituée (parfois d'un label), d'une instruction et d'opérandes.

Exemple :
"movea" est une instruction
"8(a6)" est une opérande
"a0" est une opérande

On retrouve dans l'assembleur les registres dont on avait parlé, des adresses mémoire, et des "labels" pour s'abstraire des adresses mémoire.
