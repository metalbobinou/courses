Un quartz sur les cartes mère crée des interruptions à intervalles régulières, les systèmes d'exploitations s'en servent pour calculer l'heure et maintenir des intervalles de temps très précises. Ces interruptions permettent de rendre le processeur au système d'exploitation pour "changer de contexte" (sauvegarder l'état du programme précédent, et recharger un autre programme à la place).

Si un programme fait un appel système, son quantum de temps est réduit. Si le syscall produit une I/O, le programme sera mis en attente tant que l'I/O n'est pas terminée (d'autres programmes se partageront le processeur).





- Le processus 1 a été exécuté pendant 4 quantum de temps
- Le processus 24 a été exécuté pendant 1 quantum de temps
- Le processus 425 a été exécuté pendant 1 quantum de temps
- Le processus 1142 a été exécuté pendant 1 quantum de temps
- Le processus 1143 a été exécuté pendant 1 quantum de temps

Si le quantum est de 30ns, le processus 1 a été exécuté
pendant 120ns, contre 30ns pour chaque autre processus.




Processus 1:				Processus 2:
char tab[40];				int sum, a, b;
int var, fd;

var = 40;				a = 1337;
read(fd, tab, var);			b = 4242;
var = 36 + 4;				sum = a + b;
...					...
